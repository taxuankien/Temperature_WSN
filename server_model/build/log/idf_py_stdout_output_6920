[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\Espressif\frameworks\WSN_project\server_model\build\bootloader\esp-idf\esptool_py && D:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Espressif/frameworks/WSN_project/server_model/build/bootloader/bootloader.bin"
Bootloader binary size 0x6480 bytes. 0xb80 bytes (10%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/src/LCD1602.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Building C object CMakeFiles/server_model.elf.dir/project_elf_src_esp32.c.obj
[6/8] Linking CXX executable server_model.elf
[7/8] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/Espressif/frameworks/WSN_project/server_model/build/server_model.bin
[8/8] cmd.exe /C "cd /D D:\Espressif\frameworks\WSN_project\server_model\build\esp-idf\esptool_py && D:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Espressif/frameworks/WSN_project/server_model/build/partition_table/partition-table.bin D:/Espressif/frameworks/WSN_project/server_model/build/server_model.bin"
server_model.bin binary size 0xf0d90 bytes. Smallest app partition is 0x100000 bytes. 0xf270 bytes (6%) free.
