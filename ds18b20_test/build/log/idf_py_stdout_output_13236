[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\ESP_Project\Temperature_WSN\ds18b20_test\build\bootloader\esp-idf\esptool_py && D:\esp8266\esp32BleMesh\myMesh\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/esp8266/esp32BleMesh/myMesh/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/ESP_Project/Temperature_WSN/ds18b20_test/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ds18b20_test.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable ds18b20_test.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/ESP_Project/Temperature_WSN/ds18b20_test/build/ds18b20_test.bin
[7/8] cmd.exe /C "cd /D D:\ESP_Project\Temperature_WSN\ds18b20_test\build\esp-idf\esptool_py && D:\esp8266\esp32BleMesh\myMesh\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/esp8266/esp32BleMesh/myMesh/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/ESP_Project/Temperature_WSN/ds18b20_test/build/partition_table/partition-table.bin D:/ESP_Project/Temperature_WSN/ds18b20_test/build/ds18b20_test.bin"
ds18b20_test.bin binary size 0x26950 bytes. Smallest app partition is 0x100000 bytes. 0xd96b0 bytes (85%) free.
[7/8] cmd.exe /C "cd /D D:\esp8266\esp32BleMesh\myMesh\Espressif\frameworks\esp-idf-v5.1.1\components\esptool_py && D:\esp8266\esp32BleMesh\myMesh\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/esp8266/esp32BleMesh/myMesh/Espressif/frameworks/esp-idf-v5.1.1 -D SERIAL_TOOL=D:/esp8266/esp32BleMesh/myMesh/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;D:/esp8266/esp32BleMesh/myMesh/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/ESP_Project/Temperature_WSN/ds18b20_test/build -P D:/esp8266/esp32BleMesh/myMesh/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM7 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 ds18b20_test.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev2
Serial port COM7
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a8:42:e3:91:11:24
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00036fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16691...
Writing at 0x00001000... (50 %)
Writing at 0x0000768e... (100 %)
Wrote 26640 bytes (16691 compressed) at 0x00001000 in 1.0 seconds (effective 219.0 kbit/s)...
Hash of data verified.
Compressed 158032 bytes to 96201...
Writing at 0x00010000... (16 %)
Writing at 0x0001bdcd... (33 %)
Writing at 0x00021732... (50 %)
Writing at 0x0002702a... (66 %)
Writing at 0x0002c207... (83 %)
Writing at 0x00031631... (100 %)
Wrote 158032 bytes (96201 compressed) at 0x00010000 in 2.4 seconds (effective 536.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 267.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
